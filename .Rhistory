library(tidyverse)
library(broom)
library(dplyr)
library(ggplot2)
library(car) # 用于VIF检验
clean_data <- read.csv("D:/Data Analysis Skill/Group projct 2/EDA/datasets/cleaned_dataset27.csv")
#EDA
# Variable distribution check
str(clean_data)
summary(clean_data)
# Visualize income distribution
ggplot(clean_data, aes(x = Income)) +
geom_bar(fill = c("skyblue", "salmon")) +
labs(title = "Income Distribution")
# Relationship between categorical variables and income
lapply(c("Education", "Occupation", "Sex", "Marital_Status"),
function(var) {
ggplot(clean_data, aes_string(x = var, fill = "Income")) +
geom_bar(position = "fill") +
coord_flip()
})
# Relationship between categorical variables and income
lapply(c("Education", "Occupation", "Sex", "Marital_Status"),
function(var) {
ggplot(clean_data, aes_string(x = var, fill = "Income")) +
geom_bar(position = "fill") +
coord_flip()
})
# Check category balance
prop.table(table(clean_data$Income)) # Sampling method should be considered in case of imbalance
# Establish GLM model
# Full variable model
clean_data <- clean_data %>%
mutate(
Income = ifelse(Income == ">50K", 1, 0)  # 将字符型转换为数值型
)
# 验证转换结果
table(clean_data$Income)
# 逻辑回归模型（因变量为二元）
model <- glm(Income ~ Age + Education + Marital_Status + Occupation + Sex + Hours_PW + Nationality,
data = clean_data,
family = binomial(link = "logit"))
#glm.fit:拟合概率算出来是数值零或一
summary(model)
# 检查多重共线性（VIF < 5为可接受）
vif(model)
library(janitor)
#occupation
clean_data %>%
tabyl(Occupation, Income) %>%
adorn_percentages("row") %>%
filter(`0` == 1 | `1` == 1)
clean_data %>%
tabyl(Occupation, Income) %>%
head()
# Education
clean_data %>%
tabyl(Education, Income) %>%
adorn_percentages("row") %>%
filter(`0` == 1 | `1` == 1)
clean_data %>%
tabyl(Education, Income) %>%
head()
# Marital_Status
clean_data %>%
tabyl(Marital_Status, Income) %>%
adorn_percentages("row") %>%
filter(`0` == 1 | `1` == 1)
clean_data %>%
tabyl(Marital_Status, Income) %>%
head()
# Sex
clean_data %>%
tabyl(Sex, Income) %>%
adorn_percentages("row") %>%
filter(`0` == 1 | `1` == 1)
clean_data %>%
tabyl(Sex, Income) %>%
head()
# Nationality
clean_data %>%
tabyl(Nationality, Income) %>%
adorn_percentages("row") %>%
filter(`0` == 1 | `1` == 1)
clean_data %>%
tabyl(Nationality, Income) %>%
head()
# Hours_PW与收入的箱线图
ggplot(clean_data, aes(x = Income, y = Hours_PW)) +
geom_boxplot()
# Hours_PW与收入的箱线图
ggplot(clean_data, aes(x = Income, y = Age)) +
geom_boxplot()
# 1. 合并稀有类别
library(forcats)
clean_data <- clean_data %>%
mutate(
Occupation = fct_lump_min(Occupation, min = 20),  # 合并样本量<20的职业
Nationality = fct_lump_n(Nationality, n = 5)       # 仅保留前5大国籍
)
# 2. 使用正则化逻辑回归（LASSO）
library(glmnet)
x <- model.matrix(Income ~ . -1, data = clean_data)  # 生成模型矩阵
y <- clean_data$Income
# 交叉验证选择最优lambda
cv_fit <- cv.glmnet(x, y, family = "binomial", alpha = 1)
plot(cv_fit)  # 查看lambda路径
# 检查多重共线性（VIF < 5为可接受）
vif(model)
clean_data %>%
tabyl(Occupation, Income) %>%
table()
clean_data %>%
tabyl(Occupation, Income) %>%
view()
#EDA
# Variable distribution check
str(clean_data)
summary(clean_data)
data <- read.csv("D:/Data Mining/group_12.csv")
ata <- data %>% select(-duration)
data <- data %>% select(-duration)
categorical_vars <- c("job", "marital", "education", "default", "housing",
"loan", "contact", "month", "day_of_week", "campaign"，"pdays","previous")
categorical_vars <- c("job", "marital", "education", "default", "housing",
"loan", "contact", "month", "day_of_week", "campaign","pdays","previous")
data[categorical_vars] <- lapply(data[categorical_vars], as.factor)
data$education <- fct_collapse(data$education,
"basic" = c("basic.4y", "basic.6y", "basic.9y"))
# 转换为因子类型
client_data <- data %>%
mutate(across(c(job, marital, education, default, housing, loan), as.factor))
# 转换为因子类型
client_data <- data %>%
mutate(across(c(job, marital, education, default, housing, loan), as.factor))
data <- read.csv("D:/Data Mining/group_12.csv")
# 转换为因子类型
client_data <- data %>%
mutate(across(c(job, marital, education, default, housing, loan), as.factor))
# 合并低频教育类别（例如"illiterate"）
client_data$education <- fct_collapse(client_data$education,
"basic" = c("basic.4y", "basic.6y", "basic.9y"))
# 合并低频职业类别（例如"unemployed"）
client_data$job <- fct_lump_min(client_data  \)job, min = 50)  # 保留至少50样本的类别
# 合并低频职业类别（例如"unemployed"）
client_data$job <- fct_lump_min(client_data$job, min = 50)  # 保留至少50样本的类别
# 分箱处理（青年/中年/老年）
client_data <- client_data %>%
mutate(age_group = cut(age,
breaks = c(18, 30, 50, Inf),
labels = c("young", "middle", "senior")))
# 二、探索性分析（EDA）
# 1. **单变量分析
# 年龄分布
ggplot(client_data, aes(x = age)) +
geom_histogram(binwidth = 5, fill = "steelblue") +
labs(title = "Age Distribution")
# 教育水平分布
client_data %>%
count(education) %>%
ggplot(aes(x = reorder(education, n), y = n)) +
geom_col(fill = "darkorange") +
coord_flip() +
labs(title = "Education Level Distribution")
# 职业与订阅率
client_data %>%
group_by(job, y) %>%
tally() %>%
ggplot(aes(x = reorder(job, n), y = n, fill = y)) +
geom_col(position = "fill") +
coord_flip() +
scale_fill_brewer(palette = "Set2") +
labs(title = "Subscription Rate by Job")
# 年龄分组与订阅率
client_data %>%
group_by(age_group, y) %>%
tally() %>%
ggplot(aes(x = age_group, y = n, fill = y)) +
geom_col(position = "fill") +
labs(title = "Subscription Rate by Age Group")
# 贷款组合分析
client_data %>%
mutate(loan_status = case_when(
housing == "yes" & loan == "yes" ~ "Both loans",
housing == "yes" ~ "Housing loan only",
loan == "yes" ~ "Personal loan only",
TRUE ~ "No loans"
)) %>%
group_by(loan_status, y) %>%
tally() %>%
ggplot(aes(x = loan_status, y = n, fill = y)) +
geom_col(position = "fill")
# 负债压力指标
client_data <- client_data %>%
mutate(debt_pressure = as.integer(default == "yes") +
as.integer(housing == "yes") +
as.integer(loan == "yes"))
# 职业-教育交叉特征
client_data <- client_data %>%
mutate(job_edu = interaction(job, education, sep = "_"))
# 对分类变量进行效果编码（Effect Coding）
library(caret)
# 对分类变量进行效果编码（Effect Coding）
install.packages('caret')
library(caret)
dummy <- dummyVars(~ job + marital + education,
data = client_data,
fullRank = TRUE)
client_data_encoded <- predict(dummy, newdata = client_data) %>%
as.data.frame() %>%
bind_cols(client_data %>% select(-job, -marital, -education))
#建模（逻辑回归模型）
model <- glm(y ~ age_group + job + education + debt_pressure + marital,
data = client_data,
family = binomial())
# 输出结果摘要
summary(model)
#建模（逻辑回归模型）
# 将 "yes"/"no" 转换为 1/0
client_data <- client_data %>%
mutate(y = ifelse(y == "yes", 1, 0))
table(client_data$y)
model <- glm(y ~ age_group + job + education + debt_pressure + marital,
data = client_data,
family = binomial())
# 输出结果摘要
summary(model)
# 可视化系数
library(broom)
tidy(model) %>%
filter(term != "(Intercept)") %>%
ggplot(aes(x = reorder(term, estimate), y = estimate)) +
geom_pointrange(aes(ymin = estimate - 1.96*std.error,
ymax = estimate + 1.96*std.error)) +
coord_flip() +
geom_hline(yintercept = 0, color = "red")
library(ranger)
install.packages('ranger')
library(ranger)
library(ranger)
rf_model <- ranger(y ~ age + job + education + marital + default + housing + loan,
data = client_data,
importance = "permutation",
probability = TRUE)
# 随机森林模型
var_imp <- rf_model$variable.importance
data.frame(Variable = names(var_imp), Importance = var_imp) %>%
ggplot(aes(x = reorder(Variable, Importance), y = Importance)) +
geom_col(fill = "darkcyan") +
coord_flip() +
labs(title = "Random Forest Variable Importance")
summary(rf_model)
# 输出结果摘要
summary(model)
clean_data <- read.csv("D:/Data Analysis Skill/git-repo/git-repo/DAS-Group-27/datasets/cleaned_dataset27.csv")
#EDA
# Variable distribution check
str(clean_data)
summary(clean_data)
# Visualize income distribution
ggplot(clean_data, aes(x = Income)) +
geom_bar(fill = c("skyblue", "salmon")) +
labs(title = "Income Distribution")
# Relationship between categorical variables and income
lapply(c("Education", "Occupation", "Sex", "Marital_Status"),
function(var) {
ggplot(clean_data, aes_string(x = var, fill = "Income")) +
geom_bar(position = "fill") +
coord_flip()
})
# Check category balance
prop.table(table(clean_data$Income)) # Sampling method should be considered in case of imbalance
# Establish GLM model
# Full variable model
clean_data <- clean_data %>%
mutate(
Income = ifelse(Income == ">50K", 1, 0)  # 将字符型转换为数值型
)
# 验证转换结果
table(clean_data$Income)
# Hours_PW与收入的箱线图
ggplot(clean_data, aes(x = Income, y = Hours_PW)) +
geom_boxplot()
# Hours_PW与收入的箱线图
ggplot(clean_data, aes(x = Income, y = Age)) +
geom_boxplot()
